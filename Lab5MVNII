0000 0300 ; Jump para o programa principal
; ================================================================================
; Índice
; ================================================================================
; 0100 0000 ; Sub-rotina OP2MNEM
; 0200 0000 ; Sub-rotina MNEM2OP
; 0300 0000 ; Programa principal
; 0400 0000 ; Tabela de mnemônicos
; 0600 0000 ; Sub-rotina de separação de bytes de MNEM
; ================================================================================
; Variáveis
; ================================================================================
0010 0000 ; Variável OPCODE (global) em hexadecimal
0012 0000 ; Variável MNEM (global) em hexadecimal
0024 0000 ; Variável Byte1MNEM
0026 0000 ; Variável Byte2MNEM
0028 0001 ; Constante = 0x001
0030 0100 ; Constante = 0x100
; ================================================================================
; Tabela de mnemònicos
; ================================================================================
0400 4A50 ; Valor em hexadecimal de MNEM = JP
0402 4A5A ; Valor em hexadecimal de MNEM = JZ
0404 4A4E ; Valor em hexadecimal de MNEM = JN
0406 4C56 ; Valor em hexadecimal de MNEM = LV
0408 2B5F ; Valor em hexadecimal de MNEM = +_
040A 2D5F ; Valor em hexadecimal de MNEM = -_
040C 2A5F ; Valor em hexadecimal de MNEM = *_
040E 2F5F ; Valor em hexadecimal de MNEM = /_
0410 4C44 ; Valor em hexadecimal de MNEM = LD
0412 4D4D ; Valor em hexadecimal de MNEM = MM
0414 5343 ; Valor em hexadecimal de MNEM = SC
0146 5253 ; Valor em hexadecimal de MNEM = RS
0148 484D ; Valor em hexadecimal de MNEM = HM
014A 4744 ; Valor em hexadecimal de MNEM = GD
014C 5044 ; Valor em hexadecimal de MNEM = PD
014E 4F53 ; Valor em hexadecimal de MNEM = OS
; ================================================================================
; Implementação da sub-rotina de separação de bytes de MNEM
; ================================================================================
0600 0000 ; Endereço de retorno
0602 8012 ; Carrega o valor de MNEM
0604 6030 ; Multiplica o valor por 0x100
0606 7030 ; Divide o valor por 0x100
0608 9026 ; Armazena o byte na variável Byte2MNEM
060A 8012 ; Carrega o valor de MNEM no acumulador
060C 7030 ; Divide por 0x100
060E 9024 ; Armazena o byte na variável Byte1MNEM
0610 B600 ; Retorna para o endereço contido em 0x600
; ================================================================================
; Implementação da sub-rotina OP2MNEM
; ================================================================================
0100 0000 ; Endereço de retorno da sub-rotina OP2MNEM
0102 8010 ; Carrega o valor de OP no acumulador
0104 5028 ; Subtrai 0x001 do valor do acumulador
0106 2146 ; Desvio se o acumulador é negativo (OPCODE = 0x000)
0108 5028 ; Subtrai 0x001 do valor do acumulador
010A 214C ; Desvio se o acumulador é negativo (OPCODE = 0x001)
010C 5028 ; Subtrai 0x001 do valor do acumulador
010E 2152 ; Desvio se o acumulador é negativo (OPCODE = 0x002)
0110 5028 ; Subtrai 0x001 do valor do acumulador
0112 2158 ; Desvio se o acumulador é negativo (OPCODE = 0x003)
0114 5028 ; Subtrai 0x001 do valor do acumulador
0116 215E ; Desvio se o acumulador é negativo (OPCODE = 0x004)
0118 5028 ; Subtrai 0x001 do valor do acumulador
011A 2164 ; Desvio se o acumulador é negativo (OPCODE = 0x005)
011C 5028 ; Subtrai 0x001 do valor do acumulador
011E 216A ; Desvio se o acumulador é negativo (OPCODE = 0x006)
0120 5028 ; Subtrai 0x001 do valor do acumulador
0122 2170 ; Desvio se o acumulador é negativo (OPCODE = 0x007)
0124 5028 ; Subtrai 0x001 do valor do acumulador
0126 2176 ; Desvio se o acumulador é negativo (OPCODE = 0x008)
0128 5028 ; Subtrai 0x001 do valor do acumulador
012A 217C ; Desvio se o acumulador é negativo (OPCODE = 0x009)
012C 5028 ; Subtrai 0x001 do valor do acumulador
012E 2182 ; Desvio se o acumulador é negativo (OPCODE = 0x00A)
0130 5028 ; Subtrai 0x001 do valor do acumulador
0132 2188 ; Desvio se o acumulador é negativo (OPCODE = 0x00B)
0134 5028 ; Subtrai 0x001 do valor do acumulador
0136 218E ; Desvio se o acumulador é negativo (OPCODE = 0x00C)
0138 5028 ; Subtrai 0x001 do valor do acumulador
013A 2194 ; Desvio se o acumulador é negativo (OPCODE = 0x00D)
013C 5028 ; Subtrai 0x001 do valor do acumulador
013E 219A ; Desvio se o acumulador é negativo (OPCODE = 0x00E)
0140 5028 ; Subtrai 0x001 do valor do acumulador
0142 21A0 ; Desvio se o acumulador é negativo (OPCODE = 0x00F)
0144 B100 ; Retorna para o endereço contido em 0x100
0146 8400 ; Carrega o valor em hexadecimal de MNEM = JP
0148 9012 ; Guarda o valor carregado em MNEM
014A B100 ; Retorna para o endereço contido em 0x100
014C 8402 ; Carrega o valor em hexadecimal de MNEM = JZ
014E 9012 ; Guarda o valor carregado em MNEM
0150 B100 ; Retorna para o endereço contido em 0x100
0152 8404 ; Carrega o valor em hexadecimal de MNEM = JN
0154 9012 ; Guarda o valor carregado em MNEM
0156 B100 ; Retorna para o endereço contido em 0x100
0158 8406 ; Carrega o valor em hexadecimal de MNEM = LV
015A 9012 ; Guarda o valor carregado em MNEM
015C B100 ; Retorna para o endereço contido em 0x100
015E 8408 ; Carrega o valor em hexadecimal de MNEM = +_
0160 9012 ; Guarda o valor carregado em MNEM
0162 B100 ; Retorna para o endereço contido em 0x100
0164 840A ; Carrega o valor em hexadecimal de MNEM = -_
0166 9012 ; Guarda o valor carregado em MNEM
0168 B100 ; Retorna para o endereço contido em 0x100
016A 840C ; Carrega o valor em hexadecimal de MNEM = *_
016C 9012 ; Guarda o valor carregado em MNEM
016E B100 ; Retorna para o endereço contido em 0x100
0170 840E ; Carrega o valor em hexadecimal de MNEM = /_
0172 9012 ; Guarda o valor carregado em MNEM
0174 B100 ; Retorna para o endereço contido em 0x100
0176 8410 ; Carrega o valor em hexadecimal de MNEM = LD
0178 9012 ; Guarda o valor carregado em MNEM
017A B100 ; Retorna para o endereço contido em 0x100
017C 8412 ; Carrega o valor em hexadecimal de MNEM = MM
017E 9012 ; Guarda o valor carregado em MNEM
0180 B100 ; Retorna para o endereço contido em 0x100
0182 8414 ; Carrega o valor em hexadecimal de MNEM = SC
0184 9012 ; Guarda o valor carregado em MNEM
0186 B100 ; Retorna para o endereço contido em 0x100
0188 8416 ; Carrega o valor em hexadecimal de MNEM = RS
018A 9012 ; Guarda o valor carregado em MNEM
018C B100 ; Retorna para o endereço contido em 0x100
018E 8418 ; Carrega o valor em hexadecimal de MNEM = HM
0190 9012 ; Guarda o valor carregado em MNEM
0192 B100 ; Retorna para o endereço contido em 0x100
0194 841A ; Carrega o valor em hexadecimal de MNEM = GD
0196 9012 ; Guarda o valor carregado em MNEM
0198 B100 ; Retorna para o endereço contido em 0x100
019A 841C ; Carrega o valor em hexadecimal de MNEM = PD
019C 9012 ; Guarda o valor carregado em MNEM
019E B100 ; Retorna para o endereço contido em 0x100
01A0 841E ; Carrega o valor em hexadecimal de MNEM = OS
01A2 9012 ; Guarda o valor carregado em MNEM
01A4 B100 ; Retorna para o endereço contido em 0x100
; ================================================================================
; Implementação da sub-rotina MNEM2OP
; ================================================================================
0200      ; Endereço de retorno da subrotina MNEM2OP

1, 2 e 3 -> Análoga ao anterior.
; ================================================================================
; Programa principal
; ================================================================================
0300      ; Início do programa

- Critério de seleção de OP2MNEM ou MNEM2OP -> nulo? usuário?
- Caso usuário => converter para ASCII
- Chamar as funções conforme o contexto
- Imprimir o resultado na tela para verificarmos se o programa está funcionando ou não
